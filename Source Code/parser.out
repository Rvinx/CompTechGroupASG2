Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     program -> error
Rule 4     statement -> INTEGER command NEWLINE
Rule 5     statement -> INTEGER error NEWLINE
Rule 6     statement -> NEWLINE
Rule 7     statement -> INTEGER NEWLINE
Rule 8     command -> DATA numlist
Rule 9     command -> DATA error
Rule 10    command -> WRITELN LPAREN wlist RPAREN ending
Rule 11    command -> WRITELN error
Rule 12    command -> WRITELN LPAREN RPAREN ending
Rule 13    command -> PROGRAM variable ending
Rule 14    variable -> ID
Rule 15    command -> END DOT
Rule 16    command -> BEGIN
Rule 17    ending -> SEMI
Rule 18    wlist -> wlist COMMA ID
Rule 19    wlist -> witem
Rule 20    witem -> STRING
Rule 21    numlist -> numlist COMMA number
Rule 22    numlist -> number
Rule 23    number -> INTEGER
Rule 24    number -> FLOAT

Terminals, with rules where they appear

BEGIN                : 16
COMMA                : 18 21
DATA                 : 8 9
DOT                  : 15
END                  : 15
FLOAT                : 24
ID                   : 14 18
INTEGER              : 4 5 7 23
LPAREN               : 10 12
NEWLINE              : 4 5 6 7
PROGRAM              : 13
RPAREN               : 10 12
SEMI                 : 17
STRING               : 20
VAR                  : 
WRITELN              : 10 11 12
error                : 3 5 9 11

Nonterminals, with rules where they appear

command              : 4
ending               : 10 12 13
number               : 21 22
numlist              : 8 21
program              : 1 0
statement            : 1 2
variable             : 13
witem                : 19
wlist                : 10 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) program -> . error
    (4) statement -> . INTEGER command NEWLINE
    (5) statement -> . INTEGER error NEWLINE
    (6) statement -> . NEWLINE
    (7) statement -> . INTEGER NEWLINE

    error           shift and go to state 3
    INTEGER         shift and go to state 4
    NEWLINE         shift and go to state 5

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (4) statement -> . INTEGER command NEWLINE
    (5) statement -> . INTEGER error NEWLINE
    (6) statement -> . NEWLINE
    (7) statement -> . INTEGER NEWLINE

    INTEGER         shift and go to state 4
    NEWLINE         shift and go to state 5

    statement                      shift and go to state 6

state 2

    (2) program -> statement .

    INTEGER         reduce using rule 2 (program -> statement .)
    NEWLINE         reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)


state 3

    (3) program -> error .

    INTEGER         reduce using rule 3 (program -> error .)
    NEWLINE         reduce using rule 3 (program -> error .)
    $end            reduce using rule 3 (program -> error .)


state 4

    (4) statement -> INTEGER . command NEWLINE
    (5) statement -> INTEGER . error NEWLINE
    (7) statement -> INTEGER . NEWLINE
    (8) command -> . DATA numlist
    (9) command -> . DATA error
    (10) command -> . WRITELN LPAREN wlist RPAREN ending
    (11) command -> . WRITELN error
    (12) command -> . WRITELN LPAREN RPAREN ending
    (13) command -> . PROGRAM variable ending
    (15) command -> . END DOT
    (16) command -> . BEGIN

    error           shift and go to state 9
    NEWLINE         shift and go to state 8
    DATA            shift and go to state 10
    WRITELN         shift and go to state 11
    PROGRAM         shift and go to state 12
    END             shift and go to state 13
    BEGIN           shift and go to state 14

    command                        shift and go to state 7

state 5

    (6) statement -> NEWLINE .

    INTEGER         reduce using rule 6 (statement -> NEWLINE .)
    NEWLINE         reduce using rule 6 (statement -> NEWLINE .)
    $end            reduce using rule 6 (statement -> NEWLINE .)


state 6

    (1) program -> program statement .

    INTEGER         reduce using rule 1 (program -> program statement .)
    NEWLINE         reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)


state 7

    (4) statement -> INTEGER command . NEWLINE

    NEWLINE         shift and go to state 15


state 8

    (7) statement -> INTEGER NEWLINE .

    INTEGER         reduce using rule 7 (statement -> INTEGER NEWLINE .)
    NEWLINE         reduce using rule 7 (statement -> INTEGER NEWLINE .)
    $end            reduce using rule 7 (statement -> INTEGER NEWLINE .)


state 9

    (5) statement -> INTEGER error . NEWLINE

    NEWLINE         shift and go to state 16


state 10

    (8) command -> DATA . numlist
    (9) command -> DATA . error
    (21) numlist -> . numlist COMMA number
    (22) numlist -> . number
    (23) number -> . INTEGER
    (24) number -> . FLOAT

    error           shift and go to state 18
    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21

    numlist                        shift and go to state 17
    number                         shift and go to state 19

state 11

    (10) command -> WRITELN . LPAREN wlist RPAREN ending
    (11) command -> WRITELN . error
    (12) command -> WRITELN . LPAREN RPAREN ending

    LPAREN          shift and go to state 22
    error           shift and go to state 23


state 12

    (13) command -> PROGRAM . variable ending
    (14) variable -> . ID

    ID              shift and go to state 25

    variable                       shift and go to state 24

state 13

    (15) command -> END . DOT

    DOT             shift and go to state 26


state 14

    (16) command -> BEGIN .

    NEWLINE         reduce using rule 16 (command -> BEGIN .)


state 15

    (4) statement -> INTEGER command NEWLINE .

    INTEGER         reduce using rule 4 (statement -> INTEGER command NEWLINE .)
    NEWLINE         reduce using rule 4 (statement -> INTEGER command NEWLINE .)
    $end            reduce using rule 4 (statement -> INTEGER command NEWLINE .)


state 16

    (5) statement -> INTEGER error NEWLINE .

    INTEGER         reduce using rule 5 (statement -> INTEGER error NEWLINE .)
    NEWLINE         reduce using rule 5 (statement -> INTEGER error NEWLINE .)
    $end            reduce using rule 5 (statement -> INTEGER error NEWLINE .)


state 17

    (8) command -> DATA numlist .
    (21) numlist -> numlist . COMMA number

    NEWLINE         reduce using rule 8 (command -> DATA numlist .)
    COMMA           shift and go to state 27


state 18

    (9) command -> DATA error .

    NEWLINE         reduce using rule 9 (command -> DATA error .)


state 19

    (22) numlist -> number .

    COMMA           reduce using rule 22 (numlist -> number .)
    NEWLINE         reduce using rule 22 (numlist -> number .)


state 20

    (23) number -> INTEGER .

    COMMA           reduce using rule 23 (number -> INTEGER .)
    NEWLINE         reduce using rule 23 (number -> INTEGER .)


state 21

    (24) number -> FLOAT .

    COMMA           reduce using rule 24 (number -> FLOAT .)
    NEWLINE         reduce using rule 24 (number -> FLOAT .)


state 22

    (10) command -> WRITELN LPAREN . wlist RPAREN ending
    (12) command -> WRITELN LPAREN . RPAREN ending
    (18) wlist -> . wlist COMMA ID
    (19) wlist -> . witem
    (20) witem -> . STRING

    RPAREN          shift and go to state 29
    STRING          shift and go to state 31

    wlist                          shift and go to state 28
    witem                          shift and go to state 30

state 23

    (11) command -> WRITELN error .

    NEWLINE         reduce using rule 11 (command -> WRITELN error .)


state 24

    (13) command -> PROGRAM variable . ending
    (17) ending -> . SEMI

    SEMI            shift and go to state 33

    ending                         shift and go to state 32

state 25

    (14) variable -> ID .

    SEMI            reduce using rule 14 (variable -> ID .)


state 26

    (15) command -> END DOT .

    NEWLINE         reduce using rule 15 (command -> END DOT .)


state 27

    (21) numlist -> numlist COMMA . number
    (23) number -> . INTEGER
    (24) number -> . FLOAT

    INTEGER         shift and go to state 20
    FLOAT           shift and go to state 21

    number                         shift and go to state 34

state 28

    (10) command -> WRITELN LPAREN wlist . RPAREN ending
    (18) wlist -> wlist . COMMA ID

    RPAREN          shift and go to state 35
    COMMA           shift and go to state 36


state 29

    (12) command -> WRITELN LPAREN RPAREN . ending
    (17) ending -> . SEMI

    SEMI            shift and go to state 33

    ending                         shift and go to state 37

state 30

    (19) wlist -> witem .

    RPAREN          reduce using rule 19 (wlist -> witem .)
    COMMA           reduce using rule 19 (wlist -> witem .)


state 31

    (20) witem -> STRING .

    RPAREN          reduce using rule 20 (witem -> STRING .)
    COMMA           reduce using rule 20 (witem -> STRING .)


state 32

    (13) command -> PROGRAM variable ending .

    NEWLINE         reduce using rule 13 (command -> PROGRAM variable ending .)


state 33

    (17) ending -> SEMI .

    NEWLINE         reduce using rule 17 (ending -> SEMI .)


state 34

    (21) numlist -> numlist COMMA number .

    COMMA           reduce using rule 21 (numlist -> numlist COMMA number .)
    NEWLINE         reduce using rule 21 (numlist -> numlist COMMA number .)


state 35

    (10) command -> WRITELN LPAREN wlist RPAREN . ending
    (17) ending -> . SEMI

    SEMI            shift and go to state 33

    ending                         shift and go to state 38

state 36

    (18) wlist -> wlist COMMA . ID

    ID              shift and go to state 39


state 37

    (12) command -> WRITELN LPAREN RPAREN ending .

    NEWLINE         reduce using rule 12 (command -> WRITELN LPAREN RPAREN ending .)


state 38

    (10) command -> WRITELN LPAREN wlist RPAREN ending .

    NEWLINE         reduce using rule 10 (command -> WRITELN LPAREN wlist RPAREN ending .)


state 39

    (18) wlist -> wlist COMMA ID .

    RPAREN          reduce using rule 18 (wlist -> wlist COMMA ID .)
    COMMA           reduce using rule 18 (wlist -> wlist COMMA ID .)

